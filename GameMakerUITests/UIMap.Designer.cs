// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace GameMakerUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// MoveModule - Use 'MoveModuleParams' to pass parameters into this method.
        /// </summary>
        public void MoveModule()
        {
            #region Variable Declarations
            WinEdit uICreateEdit = this.UIGamersCreatingGamesfWindow.UICreateHyperlink.UICreateEdit;
            WinEdit uIUnitsEdit = this.UIGamersCreatingGamesfWindow.UIUnitsHyperlink.UIUnitsEdit;
            WinButton uIBasicButton = this.UIGamersCreatingGamesfWindow.UIUnitsBasicListItem.UIBasicButton;
            WinCustom uIItemCustom = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UIItemCustom;
            WinEdit uIBasic232Edit = this.UIGamersCreatingGamesfWindow.UIBasic232Button.UIBasic232Edit;
            WinEdit uIUnitEdit = this.UIGamersCreatingGamesfWindow.UIUnitHyperlink.UIUnitEdit;
            WinButton uIAddModuleButton = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UIAddModuleButton;
            WinEdit uIEventsKeyBindingsEdit = this.UIGamersCreatingGamesfWindow.UIEventsKeyBindingsHyperlink.UIEventsKeyBindingsEdit;
            WinButton uIAddBindingButton = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UIAddBindingButton;
            WinButton uINoneButton = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UINoneButton;
            WinButton uINoneButton1 = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UINoneButton1;
            WinButton uIPressanykeyButton = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UIPressanykeyButton;
            WinCustom uIItemCustom1 = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UIItemCustom1;
            #endregion

            // Click 'Create' text box
            Mouse.Click(uICreateEdit, new Point(12, 14));

            // Click 'Units' text box
            Mouse.Click(uIUnitsEdit, new Point(24, 15));

            // Click 'Basic' button
            Mouse.Click(uIBasicButton, new Point(98, 25));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(389, 167));

            // Click 'Basic232' text box
            Mouse.Click(uIBasic232Edit, new Point(38, 12));

            // Click 'Unit' text box
            Mouse.Click(uIUnitEdit, new Point(16, 16));

            // Click 'Add Module' button
            Mouse.Click(uIAddModuleButton, new Point(29, 24));

            // Click 'Events / Key Bindings' text box
            Mouse.Click(uIEventsKeyBindingsEdit, new Point(64, 15));

            // Click 'Add Binding' button
            Mouse.Click(uIAddBindingButton, new Point(32, 20));

            // Click 'None' button
            Mouse.Click(uINoneButton, new Point(31, 31));

            // Click 'None' button
            Mouse.Click(uINoneButton1, new Point(43, 28));

            // Type 'd' in 'Press any key' button
            Keyboard.SendKeys(uIPressanykeyButton, this.MoveModuleParams.UIPressanykeyButtonSendKeys, ModifierKeys.None);

            // Click custom control numbered 2 in 'Gamers Creating Games for Gamers' document
            Mouse.Click(uIItemCustom1, new Point(16, 1));
        }
        
        /// <summary>
        /// ModuleAdditionAssertion - Use 'ModuleAdditionAssertionExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ModuleAdditionAssertion()
        {
            #region Variable Declarations
            WinComboBox uIItemComboBox = this.UIGamersCreatingGamesfWindow.UIGamersCreatingGamesfDocument.UIItemComboBox;
            #endregion

            // Verify that the 'SelectedItem' property of combo box equals 'move'
            Assert.AreEqual(this.ModuleAdditionAssertionExpectedValues.UIItemComboBoxSelectedItem, uIItemComboBox.SelectedItem, "Module move not added");
        }
        
        #region Properties
        public virtual MoveModuleParams MoveModuleParams
        {
            get
            {
                if ((this.mMoveModuleParams == null))
                {
                    this.mMoveModuleParams = new MoveModuleParams();
                }
                return this.mMoveModuleParams;
            }
        }
        
        public virtual ModuleAdditionAssertionExpectedValues ModuleAdditionAssertionExpectedValues
        {
            get
            {
                if ((this.mModuleAdditionAssertionExpectedValues == null))
                {
                    this.mModuleAdditionAssertionExpectedValues = new ModuleAdditionAssertionExpectedValues();
                }
                return this.mModuleAdditionAssertionExpectedValues;
            }
        }
        
        public UIGamersCreatingGamesfWindow UIGamersCreatingGamesfWindow
        {
            get
            {
                if ((this.mUIGamersCreatingGamesfWindow == null))
                {
                    this.mUIGamersCreatingGamesfWindow = new UIGamersCreatingGamesfWindow();
                }
                return this.mUIGamersCreatingGamesfWindow;
            }
        }
        #endregion
        
        #region Fields
        private MoveModuleParams mMoveModuleParams;
        
        private ModuleAdditionAssertionExpectedValues mModuleAdditionAssertionExpectedValues;
        
        private UIGamersCreatingGamesfWindow mUIGamersCreatingGamesfWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'MoveModule'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class MoveModuleParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'd' in 'Press any key' button
        /// </summary>
        public string UIPressanykeyButtonSendKeys = "d";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ModuleAdditionAssertion'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class ModuleAdditionAssertionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of combo box equals 'move'
        /// </summary>
        public string UIItemComboBoxSelectedItem = "move";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIGamersCreatingGamesfWindow : WinWindow
    {
        
        public UIGamersCreatingGamesfWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gamers Creating Games for Gamers - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UICreateHyperlink UICreateHyperlink
        {
            get
            {
                if ((this.mUICreateHyperlink == null))
                {
                    this.mUICreateHyperlink = new UICreateHyperlink(this);
                }
                return this.mUICreateHyperlink;
            }
        }
        
        public UIUnitsHyperlink UIUnitsHyperlink
        {
            get
            {
                if ((this.mUIUnitsHyperlink == null))
                {
                    this.mUIUnitsHyperlink = new UIUnitsHyperlink(this);
                }
                return this.mUIUnitsHyperlink;
            }
        }
        
        public UIUnitsBasicListItem UIUnitsBasicListItem
        {
            get
            {
                if ((this.mUIUnitsBasicListItem == null))
                {
                    this.mUIUnitsBasicListItem = new UIUnitsBasicListItem(this);
                }
                return this.mUIUnitsBasicListItem;
            }
        }
        
        public UIGamersCreatingGamesfDocument UIGamersCreatingGamesfDocument
        {
            get
            {
                if ((this.mUIGamersCreatingGamesfDocument == null))
                {
                    this.mUIGamersCreatingGamesfDocument = new UIGamersCreatingGamesfDocument(this);
                }
                return this.mUIGamersCreatingGamesfDocument;
            }
        }
        
        public UIBasic232Button UIBasic232Button
        {
            get
            {
                if ((this.mUIBasic232Button == null))
                {
                    this.mUIBasic232Button = new UIBasic232Button(this);
                }
                return this.mUIBasic232Button;
            }
        }
        
        public UIUnitHyperlink UIUnitHyperlink
        {
            get
            {
                if ((this.mUIUnitHyperlink == null))
                {
                    this.mUIUnitHyperlink = new UIUnitHyperlink(this);
                }
                return this.mUIUnitHyperlink;
            }
        }
        
        public UIEventsKeyBindingsHyperlink UIEventsKeyBindingsHyperlink
        {
            get
            {
                if ((this.mUIEventsKeyBindingsHyperlink == null))
                {
                    this.mUIEventsKeyBindingsHyperlink = new UIEventsKeyBindingsHyperlink(this);
                }
                return this.mUIEventsKeyBindingsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UICreateHyperlink mUICreateHyperlink;
        
        private UIUnitsHyperlink mUIUnitsHyperlink;
        
        private UIUnitsBasicListItem mUIUnitsBasicListItem;
        
        private UIGamersCreatingGamesfDocument mUIGamersCreatingGamesfDocument;
        
        private UIBasic232Button mUIBasic232Button;
        
        private UIUnitHyperlink mUIUnitHyperlink;
        
        private UIEventsKeyBindingsHyperlink mUIEventsKeyBindingsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UICreateHyperlink : WinHyperlink
    {
        
        public UICreateHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Create ";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UICreateEdit
        {
            get
            {
                if ((this.mUICreateEdit == null))
                {
                    this.mUICreateEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICreateEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Create ";
                    this.mUICreateEdit.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUICreateEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICreateEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIUnitsHyperlink : WinHyperlink
    {
        
        public UIUnitsHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Units ";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUnitsEdit
        {
            get
            {
                if ((this.mUIUnitsEdit == null))
                {
                    this.mUIUnitsEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUnitsEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Units";
                    this.mUIUnitsEdit.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIUnitsEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUnitsEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIUnitsBasicListItem : WinListItem
    {
        
        public UIUnitsBasicListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Units Basic";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIBasicButton
        {
            get
            {
                if ((this.mUIBasicButton == null))
                {
                    this.mUIBasicButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBasicButton.SearchProperties[WinButton.PropertyNames.Name] = "Basic";
                    this.mUIBasicButton.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIBasicButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBasicButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIGamersCreatingGamesfDocument : WinControl
    {
        
        public UIGamersCreatingGamesfDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gamers Creating Games for Gamers";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new WinCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public WinButton UIAddModuleButton
        {
            get
            {
                if ((this.mUIAddModuleButton == null))
                {
                    this.mUIAddModuleButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddModuleButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Module";
                    this.mUIAddModuleButton.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIAddModuleButton;
            }
        }
        
        public WinButton UIAddBindingButton
        {
            get
            {
                if ((this.mUIAddBindingButton == null))
                {
                    this.mUIAddBindingButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddBindingButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Binding";
                    this.mUIAddBindingButton.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIAddBindingButton;
            }
        }
        
        public WinButton UINoneButton
        {
            get
            {
                if ((this.mUINoneButton == null))
                {
                    this.mUINoneButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINoneButton.SearchProperties[WinButton.PropertyNames.Name] = "None";
                    this.mUINoneButton.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUINoneButton;
            }
        }
        
        public WinButton UINoneButton1
        {
            get
            {
                if ((this.mUINoneButton1 == null))
                {
                    this.mUINoneButton1 = new WinButton(this);
                    #region Search Criteria
                    this.mUINoneButton1.SearchProperties[WinButton.PropertyNames.Name] = "None";
                    this.mUINoneButton1.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUINoneButton1;
            }
        }
        
        public WinButton UIPressanykeyButton
        {
            get
            {
                if ((this.mUIPressanykeyButton == null))
                {
                    this.mUIPressanykeyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPressanykeyButton.SearchProperties[WinButton.PropertyNames.Name] = "Press any key";
                    this.mUIPressanykeyButton.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPressanykeyButton;
            }
        }
        
        public WinCustom UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new WinCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom1.SearchProperties["Instance"] = "2";
                    this.mUIItemCustom1.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemCustom1;
            }
        }
        
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIItemCustom;
        
        private WinButton mUIAddModuleButton;
        
        private WinButton mUIAddBindingButton;
        
        private WinButton mUINoneButton;
        
        private WinButton mUINoneButton1;
        
        private WinButton mUIPressanykeyButton;
        
        private WinCustom mUIItemCustom1;
        
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIBasic232Button : WinButton
    {
        
        public UIBasic232Button(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Basic232";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIBasic232Edit
        {
            get
            {
                if ((this.mUIBasic232Edit == null))
                {
                    this.mUIBasic232Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIBasic232Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Basic232";
                    this.mUIBasic232Edit.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIBasic232Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIBasic232Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIUnitHyperlink : WinHyperlink
    {
        
        public UIUnitHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Unit";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUnitEdit
        {
            get
            {
                if ((this.mUIUnitEdit == null))
                {
                    this.mUIUnitEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUnitEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Unit";
                    this.mUIUnitEdit.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIUnitEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUnitEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIEventsKeyBindingsHyperlink : WinHyperlink
    {
        
        public UIEventsKeyBindingsHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Events / Key Bindings";
            this.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIEventsKeyBindingsEdit
        {
            get
            {
                if ((this.mUIEventsKeyBindingsEdit == null))
                {
                    this.mUIEventsKeyBindingsEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEventsKeyBindingsEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Events / Key Bindings";
                    this.mUIEventsKeyBindingsEdit.WindowTitles.Add("Gamers Creating Games for Gamers - Mozilla Firefox");
                    #endregion
                }
                return this.mUIEventsKeyBindingsEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIEventsKeyBindingsEdit;
        #endregion
    }
}
